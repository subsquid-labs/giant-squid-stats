enum SubProcessorTaskStatus {
  completed
  processing
  waiting
}

type SubProcessorTask @entity {
  "taskId"
  id: ID!
  workerId: String
  taskName: String!
  blockHash: String!
  blockHeight: Int!
  timestamp: String!
  result: TaskResult
  queueIndex: Int!
  queueSubIndex: Int!
  status: SubProcessorTaskStatus!
}

type TaskResult {
  totalHoldersCount: Int
  totalFreeBalance: BigInt
}

type Totals @entity {
  id: ID!
  finalizedBlocks: BigInt!
  totalIssuance: BigInt!
  signedExtrinsics: BigInt!
  transfersCount: BigInt!
  holders: Int!

  collatorsIdealCount: Int
  collatorsCount: Int
  validatorsIdealCount: Int
  validatorsCount: Int

  currentEra: Int
  currentRound: Int
  circulatingAssetsTotal: BigInt
  stakedValueTotal: BigInt
  stakedValueValidator: BigInt @index
  stakedValueCollator: BigInt @index
  stakedValueNominator: BigInt @index

  nominationPoolsCountMembers: Int @index
  nominationPoolsCountPools: Int @index
  nominationPoolsTotalStake: BigInt @index
  #  inflationRate: BigInt!
}

type HistoricalDataMeta @entity {
  id: ID!
  holdersLatestBlockNumber: BigInt! @index
  holdersLatestTime: DateTime @index

  issuanceLatestBlockNumber: BigInt! @index
  issuanceLatestTime: DateTime @index

  validatorsLatestBlockNumber: BigInt! @index
  validatorsLatestTime: DateTime @index

  stakingLatestBlockNumber: BigInt! @index
  stakingLatestTime: DateTime @index

  nominationPoolsLatestBlockNumber: BigInt! @index
  nominationPoolsLatestTime: DateTime @index
}

type Account @entity {
  "Public key"
  id: ID!
  free: BigInt!
  reserved: BigInt!
  total: BigInt!
  updatedAtBlock: Int
}

type Holders @entity {
  "Block number"
  id: ID!
  amount: Int! @index
  totalFreeBalance: BigInt! @index
  timestamp: DateTime! @index
  blockHash: String! @index
}

type Issuance @entity {
  "Block number"
  id: ID!
  volume: BigInt! @index
  timestamp: DateTime! @index
  blockHash: String! @index
}

type NominationPools @entity {
  "Block number"
  id: ID!
  totalPoolsCount: Int! @index
  totalPoolsMembers: Int! @index
  totalPoolsStake: BigInt! @index
  timestamp: DateTime! @index
  blockHash: String! @index
}

type ValidatorCollator @entity {
  "Block number"
  id: ID!
  timestamp: DateTime! @index
  idealCount: Int! @index
  count: Int! @index
  blockHash: String! @index
}

type StakedValue @entity {
  "Block number"
  id: ID!
  currentEra: Int @index
  currentRound: Int @index
  collatorsCount: Int @index
  activeValidators: Int @index
  totalValidators: Int @index
  totalNominators: Int @index
  inflationRatio: Float @index
  rewardsRatio: Float @index
  timestamp: DateTime! @index
  totalStake: BigInt! @index
  totalStakeStorage: BigInt @index
  validatorStake: BigInt @index
  collatorStake: BigInt @index
  nominatorStake: BigInt! @index
  blockHash: String! @index
}

type Transfer @entity {
  "Block number"
  id: ID!
  timestamp: DateTime! @index
  blockHash: String! @index
  totalVolume: BigInt! @index
  totalCount: Int! @index
}

type Extrinsic @entity {
  "Block number"
  id: ID!
  timestamp: DateTime! @index
  blockHash: String! @index
  totalCount: Int! @index
}
